/* Fun
 *
 * $Id: ParsedAnonymousDefinition.java,v 1.5 2014/11/01 19:49:40 sthippo Exp $
 *
 * Copyright (c) 2002-2014 by fundev.org
 *
 * Use of this code in source or compiled form is subject to the
 * Fun Poetic License at http://www.fundev.org/poetic-license.html
 */

package fun.parser;

import fun.lang.*;
import java.util.*;

/**
 * Based on code generated by jjtree.
 *
 * @author Michael St. Hippolyte
 * @version $Revision: 1.5 $
 */

public class ParsedAnonymousDefinition extends AnonymousDefinition implements Initializable {
    public ParsedAnonymousDefinition(int id) {
        super();
    }


    /** Accept the visitor. **/
    public Object jjtAccept(FunParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public void init() {
        int paramlen = children.length - 1;
        if (paramlen > 0) {
            List<ParameterList> paramLists = new ArrayList<ParameterList>(paramlen);
            for (int i = 0; i < paramlen; i++) {
                paramLists.add((ParameterList) children[i]);
            }
            setParamLists(paramLists);
        }
        setContents(children[paramlen]);
    }
}
